name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true

defaults:
  run:
    working-directory: ./

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip
          coverage: none

      - name: Get version
        id: get_version
        if: github.event_name == 'workflow_dispatch'
        run: echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Get version from tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" | sed 's/^v//' >> $GITHUB_ENV

      - name: Validate version
        run: |
          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::error::Invalid version format: $VERSION. Must be in format X.Y.Z"
            exit 1
          fi

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Update version in composer.json
        run: |
          composer config version "$VERSION"
          git add composer.json
          git commit -m "chore: bump version to $VERSION" || echo "No changes to commit"

      - name: Push changes
        run: git push origin HEAD:main

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          body_path: CHANGELOG.md
          prerelease: false
          draft: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Packagist
        if: success()
        uses: docker://hybridgroup/gha-publish-to-packagist:latest
        with:
          args: publish luinuxscl/wordpress-basic-auth ${{ secrets.PACKAGIST_TOKEN }}
